name: Android Profile

on:
  workflow_dispatch:
  workflow_call:

jobs:
  Build-Profile:
    strategy:
      fail-fast: false
      matrix:
        compiler: [msvc]
        config: [profile]
        image: [windows-2022]
        platform: [Android]
        type: [profile]

    runs-on: ${{ matrix.image }}

    env:
        LY_NDK_DIR: "C:/Android/android-sdk/ndk/21.4.7075529"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.1.7
        with:
          show-progress: false
          
      - name: Git LFS fetch
        run: |
          git lfs install
          git lfs fetch --include "*.ico,*.bmp"
          git lfs checkout
      
      - name: Restore timestamps
        uses: chetan/git-restore-mtime-action@v2

      - name: Setup 3p and build folder symlinks
        run: |
          "3rdParty", "build", ".o3de" | % {New-Item "D:\$_" -ItemType 'Directory' -Force}
          "3rdParty", "build" | % {New-Item -Name .\$_ -ItemType SymbolicLink -Target D:\$_ -Force}
          ".o3de" | % {New-Item -Path $env:USERPROFILE\$_ -ItemType SymbolicLink -Target D:\$_ -Force}

      - name: Restore 3p Cache
        uses: actions/cache/restore@v4.1.1
        continue-on-error: true
        if: always()
        with:
          path: |
            D:\.o3de\Python
            D:\python
            D:\3rdParty\packages
          key: O3DE-${{ matrix.platform }}-3p

      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1.4.3
        with:
          override_cache_key: O3DE-${{ matrix.platform }}-${{ matrix.config }}-ccache
          override_cache_key_fallback: |
            O3DE-${{ matrix.platform }}-${{ matrix.config }}
          Android_compile_environment: msvc
          prepend_symlinks_to_path: false
          store_cache: false
          restore_cache: false
          ccache_options: |
            max_size=5G
            cache_dir=D:\.ccache

      - name: Restore ccache
        uses: actions/download-artifact@v4.1.8
        continue-on-error: true
        if: always()
        with:
          name: O3DE-${{ matrix.platform }}-ccache
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ vars.Android_ARTIFACT_RUNID }}
          path: D:\.ccache
        
      - name: Configure environment
        continue-on-error: true
        env:
          chocolateyPackageFolder: "C:\\ProgramData\\chocolatey"
        run: |
          echo "Installing dependancies"
          echo "Getting python..."
          python\get_python.bat
          echo "Setup Android SDK..."
          scripts\build\build_node\Platform\Windows\install-windows-android.ps1 | Out-Null
          
      - name: Add msbuild to PATH
        uses: ilammy/msvc-dev-cmd@v1.13.0

      - name: Get environment
        run: |
          dir env:
          get-psdrive
          
      - name: Build
        env:
          LY_3RDPARTY_PATH: D:\3rdParty
          CMAKE_C_COMPILER_LAUNCHER: ccache
          CMAKE_CXX_COMPILER_LAUNCHER: ccache
        run: 
          python\python.cmd -u scripts\build\ci_build.py --platform ${{ matrix.platform }} --type ${{ matrix.config }} 
          
      - name: Save 3p Cache
        uses: actions/cache/save@v4.0.2
        continue-on-error: true
        if: always()
        with:
          path: |
            D:\.o3de\Python
            D:\python
            D:\3rdParty\packages
          key: O3DE-${{ matrix.platform }}-3p

      - name: Save ccache
        uses: actions/upload-artifact@v4.4.3
        continue-on-error: true
        if: (contains(github.ref, 'development') || contains(github.ref, ${{ vars.STABILIZATION_BRANCH }})) && always()
        with:
          name: O3DE-${{ matrix.platform }}-ccache
          compression-level: 1
          if-no-files-found: warn
          include-hidden-files: true
          path: D:\.ccache
          
      - name: Set ccache runid variable
        if: (contains(github.ref, 'development') || contains(github.ref,  ${{ vars.STABILIZATION_BRANCH }})) && always()
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: gh variable set Android_ARTIFACT_RUNID --body  ${{ github.run_id }}
