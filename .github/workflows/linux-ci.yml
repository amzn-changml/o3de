name: Linux

on:
  push:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        compiler: [clang]
        config: [Profile]
        image: [ubuntu-20.04]

    runs-on: ${{ matrix.image }}

    env:
      CC:  ${{ matrix.compiler == 'gcc' && 'gcc' || 'clang'   }}
      CXX: ${{ matrix.compiler == 'gcc' && 'g++' || 'clang++' }}
      CMAKE_C_COMPILER_LAUNCHER: ccache
      CMAKE_CXX_COMPILER_LAUNCHER: ccache

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
            root-reserve-mb: 10240
            swap-size-mb: 512
            remove-dotnet: 'true'
            remove-haskell: 'true'
            remove-android: 'true'     
            
      - uses: actions/checkout@v3
        with:
         fetch-depth: 1
         submodules: recursive

      - uses: hendrikmuhs/ccache-action@v1
        with:
          key: linux-${{ matrix.image }}-${{ matrix.compiler }}-${{ matrix.config }}

      - name: Configure environment
        run: |
         echo "Installing dependancies"
         pushd ./scripts/build/build_node/Platform/Linux
         sudo ./install-ubuntu.sh
         popd
         echo "Getting python..."
         ./python/get_python.sh
         
      - name: Configure
        run: |
          echo "Generating project..."
          cmake -B build/linux -DCMAKE_BUILD_TYPE=${{ matrix.config }} -DCMAKE_LINK_WHAT_YOU_USE=TRUE -DLY_3RDPARTY_PATH=./3rdParty
          
      - name: Build
        run: |
          #cmake --build build -j1 --config ${{ matrix.config }}
          cmake --build build/linux --target Editor --config profile

      - uses: actions/upload-artifact@v2
        with:
          name: OSP-linux-${{ matrix.image}}-${{ matrix.config }}-${{ matrix.compiler }}
          path: build/${{ matrix.config }}
