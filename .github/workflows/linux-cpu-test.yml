name: Linux Profile CPU Test

on:
  workflow_dispatch:
  workflow_call:
  push:
      paths: '.github/workflows/linux-cpu-test.yml'

jobs:
  Build-CPU-Test:
    strategy:
      fail-fast: false
      matrix:
        compiler: [clang]
        config: [profile]
        image: [ubuntu-22.04]
        platform: [Linux]
        type: [test_profile]

    runs-on: ${{ matrix.image }}

    steps:          
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 8000
          temp-reserve-mb: 2000
          swap-size-mb: 200
          remove-dotnet: true
          remove-haskell: true
          remove-codeql: true
          remove-docker-images: true
            
      - name: Checkout repo
        uses: actions/checkout@v4.1.7
        with:
          show-progress: false
          
      - name: Git LFS fetch
        run: |
          git lfs install
          git lfs fetch --all
          git lfs checkout

      - name: Restore timestamps
        uses: chetan/git-restore-mtime-action@v2
          
      - name: Restore 3P Cache
        uses: actions/cache/restore@v4.0.2
        continue-on-error: true
        with:
          path: |
            ${{ github.workspace }}/3rdParty/packages
            ${{ github.workspace }}/python
          key: O3DE-${{ matrix.platform }}-3p

      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1.4.3
        continue-on-error: true
        if: always()
        with:
          override_cache_key: O3DE-${{ matrix.platform }}-${{ matrix.config }}-ccache
          override_cache_key_fallback: |
            O3DE-${{ matrix.image }}-${{ matrix.config }}-ccache
          prepend_symlinks_to_path: false
          store_cache: false
          restore_cache: false
          ccache_options: |
            max_size=5G
            cache_dir=${{ github.workspace }}/.ccache
            
      - name: Restore ccache
        uses: actions/download-artifact@v4.1.8
        continue-on-error: true
        if: always()
        with:
          name: O3DE-${{ matrix.platform }}-ccache
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ vars.Linux_CCACHE_ARTIFACT_RUNID }}
          path: ${{ github.workspace }}/.ccache/

      - name: Configure environment
        continue-on-error: true
        if: always()
        run: |
          echo "Installing dependancies"
          pushd ./scripts/build/build_node/Platform/Linux
          sudo ./install-ubuntu.sh
          popd
          echo "Getting python..."
          ./python/get_python.sh
          echo "Installing desktop environment and tools"
          sudo apt-get install ubuntu-desktop xorg mesa-utils vulkan-tools gdm3 xvfb -y
          
          # Setup X desktop manager (Wayland needs to be turned off for GDM3)
          sudo sed -i 's/#WaylandEnable=false/WaylandEnable=false/g' /etc/gdm3/custom.conf
          sudo systemctl restart gdm3
          
          sudo apt -y autoremove --purge
          sudo apt -y autoclean
          sudo apt clean
          df -h
          
      - name: Build
        env:
          LY_3RDPARTY_PATH: ${{ github.workspace }}/3rdParty
          CC:  ${{ matrix.compiler == 'gcc' && 'gcc' || 'clang'   }}
          CXX: ${{ matrix.compiler == 'gcc' && 'g++' || 'clang++' }}
          CMAKE_C_COMPILER_LAUNCHER: ccache
          CMAKE_CXX_COMPILER_LAUNCHER: ccache
          DISPLAY: :0
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          Xvfb :0 -screen 0 1400x1050x16 &
          python/python.sh -u scripts/build/ci_build.py --platform ${{ matrix.platform }} --type ${{ matrix.type }}
          
