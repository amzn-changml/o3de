name: Windows

on:
  push:
  workflow_dispatch: {}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        compiler: [msvc]
        config: [profile]
        target: [ALL_BUILD]
        image: [windows-2022]

    runs-on: ${{ matrix.image }}

    steps:               
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Git LFS fetch
        run: |
          git lfs install
          git lfs fetch --include "*.ico"
          git lfs checkout
      
      - name: Create binary folders
        run: |
          # "build","3rdParty" | % {New-Item "c:\o3de\$_" -ItemType 'Directory' -Force}
          "3rdParty" | % {New-Item "c:\o3de\$_" -ItemType 'Directory' -Force}
          "3rdParty" | % {New-Item -ItemType SymbolicLink -Name .\$_ -Target c:\o3de\$_ -Force}
                     
      - name: Restore 3P Cache
        uses: actions/cache/restore@v4
        continue-on-error: true
        with:
          path: |
            ${{ github.workspace }}\3rdParty\downloaded_packages
            ${{ github.workspace }}\python
          key: O3DE-${{ matrix.image }}-3p
          restore-keys: |
            O3DE-windows-3p-
      
      - name: Restore build
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          run-id: 9447278841
          path: ${{ github.workspace }}\
          name: O3DE-${{ matrix.image }}-build-${{ matrix.config }}-${{ matrix.target }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Decompress Build
        continue-on-error: true
        run: |
          7z.exe x -mmt=4 ${{ github.workspace }}\build.zip
          del ${{ github.workspace }}\build.zip

      - uses: lukka/get-cmake@latest
        
      - name: Configure environment
        run: |
          echo "Installing dependancies"
          echo "Getting python..."
          python\get_python.bat
          
      - name: Add msbuild to PATH
        uses: ilammy/msvc-dev-cmd@v1.12.0
      
      - name: Configure
        run: |
          echo "Generating project..."
          cmake -B ${{ github.workspace }}\build -G "Visual Studio 17 2022" -DLY_3RDPARTY_PATH=3rdParty
          
      - name: Build
        run: 
          cmake --build ${{ github.workspace }}\build --target ${{ matrix.target }} --config ${{ matrix.config }} -- /m /nologo

      - name: Save 3P Cache
        uses: actions/cache/save@v4
        continue-on-error: true
        if: always()
        with:
          path: |
            ${{ github.workspace }}\3rdParty\downloaded_packages
            ${{ github.workspace }}\python
          key: O3DE-${{ matrix.image }}-3p

      - name: Compress Build
        continue-on-error: true
        if: always()
        run: |
          7z.exe a -tzip -mmt=4 -mx=1 -mm=BZip2 c:\o3de\build.zip ${{ github.workspace }}\build
      
      - name: Save build
        uses: actions/upload-artifact@v4
        continue-on-error: true
        if: always()
        with:
          path: c:\o3de\build.zip
          name: O3DE-${{ matrix.image }}-build-${{ matrix.config }}-${{ matrix.target }}
          compression-level: 0
